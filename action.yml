name: 'iOS Simulator UDID Action'
description: 'Custom GitHub Action to retrieve the iOS Simulator UDID.'

inputs:
  iphone_type:
    description: "iPhone model to use for the simulator (e.g., iPhone 15, iPhone 14)."
    required: false
    default: 'iPhone 15'

runs:
  using: 'composite'
  steps:
    - name: Install Xcode Command-Line Tools
      run: |
        echo "Checking for Xcode command-line tools..."
        if ! xcode-select --version &> /dev/null; then
          echo "Installing Xcode command-line tools..."
          xcode-select --install
        else
          echo "Xcode command-line tools already installed."
        fi
      shell: bash

    - name: Set Xcode Version
      run: |
        echo "Setting Xcode version..."
        sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
        xcodebuild -version
      shell: bash

    - name: List Available Simulators (Before Creating)
      run: xcrun simctl list devices
      shell: bash

    - name: Find Existing Simulator
      id: find-simulator
      run: |
        DEVICE_NAME="${{ inputs.iphone_type }}"
        echo "Searching for an available simulator: $DEVICE_NAME..."
        
        DEVICE_UDID=$(xcrun simctl list devices available | grep -m 1 "$DEVICE_NAME (" | awk -F '[()]' '{print $2}')
        
        if [[ -z "$DEVICE_UDID" ]]; then
          echo "ERROR: No available simulator found for $DEVICE_NAME"
          exit 1
        fi

        echo "Using existing simulator: $DEVICE_UDID"
        
        # Boot the found simulator
        echo "Booting simulator $DEVICE_UDID..."
        xcrun simctl boot "$DEVICE_UDID"

        # Store UDID for later steps
        echo "DEVICE_UDID=$DEVICE_UDID" >> $GITHUB_ENV
        echo "simulator_id=$DEVICE_UDID" >> $GITHUB_ENV
      shell: bash
      
    - name: Wait for Simulator to Boot
      run: |
        DEVICE_UDID="${{ env.DEVICE_UDID }}"
        echo "Waiting for simulator ($DEVICE_UDID) to boot..."
        
        while ! xcrun simctl list devices | grep "$DEVICE_UDID" | grep -q "Booted"; do
          echo "Still waiting for the simulator to boot..."
          sleep 5
        done
        
        echo "Simulator $DEVICE_UDID is now fully booted!"
      shell: bash

    - name: Verify Simulator is Running
      run: xcrun simctl list devices | grep "Booted"
      shell: bash
